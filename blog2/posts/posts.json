[
  {
    "path": "posts/2017-08-24-bond/",
    "title": "James Bond Tourism",
    "description": "James Bond must be the most well-travelled man in the history of movies. As it is summer time, let's have a look at the 007 travel locations in the 24 films of the spy franchise with the R packages {maps}, {ggplot2} and {ggmap}.",
    "author": [],
    "date": "2017-08-24",
    "categories": [],
    "contents": "\r\n\r\nJames Bond must be the most well-travelled man in the history of movies. As it is summer time, let’s have a look at the 007 travel locations in the 24 films of the spy franchise with the R packages {maps}, {ggplot2} and {ggmap}.\r\n\r\nIn this article, we will answer three questions:\r\nWhat are the countries that James Bond has visited?\r\nWhich countries has James Bond visited the most?\r\nHave mission’s locations of James Bond changed over time?\r\nThe Data\r\nWe can find on Wikipedia a full list of James Bond film locations. I copied the list on LibreOffice Calc and made some quick cleaning. For reproductivity, the data can be downloaded on my Github repository.\r\nlibrary(tidyverse)\r\n\r\nbond <- read_csv(\"https://raw.githubusercontent.com/lgnbhl/lgnbhl.github.io/masterimg/data_bond.csv\")\r\n\r\nprint(bond)\r\n## # A tibble: 143 x 3\r\n##                     Film                           Location         region\r\n##                    <chr>                              <chr>          <chr>\r\n##  1                Dr. No MI6 headquarters in central London        England\r\n##  2                Dr. No                           Kingston        Jamaica\r\n##  3                Dr. No                           Crab Key        Jamaica\r\n##  4 From Russia with Love                      Unnamed river United Kingdom\r\n##  5 From Russia with Love                             Zagreb        Croatia\r\n##  6 From Russia with Love                           Belgrade         Serbia\r\n##  7 From Russia with Love                           Istanbul         Turkey\r\n##  8 From Russia with Love                             Venice          Italy\r\n##  9            Goldfinger                         Stoke Park        England\r\n## 10            Goldfinger                             Geneva    Switzerland\r\n## # ... with 133 more rows\r\nMapping Bond’s worldwide missions\r\nWe can count and map all the countries visited by James Bond in the film series. The package {ggalt} gives the possibility to choose between different map projections. We selected the Winkel Tripel projection for mapping.\r\nlibrary(maps)\r\n\r\nworld <- map_data(\"world\") %>% \r\n  filter(region != \"Antarctica\")\r\n\r\n# Renaming regions for mapping\r\nbond <- bond %>%\r\n  mutate(region = recode(region,\r\n    \"United Kingdom\" = \"UK\",\r\n    \"England\" = \"UK\",\r\n    \"United States\" = \"USA\"\r\n  )) \r\n\r\nbond_number <- bond %>%\r\n  count(region, sort = TRUE)\r\n\r\nlibrary(ggalt)\r\nlibrary(ggthemes)\r\n\r\nggplot() +\r\n  geom_map(data = world, map = world,\r\n           aes(x = long, y = lat, map_id = region),\r\n           fill=\"lightgrey\", col=\"white\", size = 0.2) +\r\n  geom_map(data = bond_number, map = world,\r\n           aes(map_id = region, fill = n)) +\r\n  scale_fill_distiller(breaks = c(1, 2, 4, 6, 8, 10, 12, 14),\r\n                       labels = c( \"1\", \"2\", \"3-4\", \"5-6\", \"7-8\", \"9-10\", \"11-12\", \"13-14\"),\r\n                       name = \"Number of visits\",\r\n                       palette = \"OrRd\", direction = 1,\r\n                       guide = guide_legend(title.position = \"top\")) +\r\n  ggalt::coord_proj(\"+proj=wintri\") +\r\n  ggthemes::theme_map() +\r\n  theme(plot.title = element_text(size = 20, face = \"bold\"),\r\n        plot.subtitle = element_text(size = 11),\r\n        legend.position = \"right\",\r\n        legend.justification = \"center\") +\r\n  labs(title = \"James Bond Tourism\",\r\n       subtitle = \"007 locations in the movie franchise\",\r\n       caption = \"Félix Luginbühl (@lgnbhl)\\n Data source: Wikipedia\")\r\n\r\nJames Bond has been to the United States 13 times. But in which movies did these visits happen?\r\nbond %>%\r\n  select(Film, region) %>%\r\n  filter(region == \"USA\") %>%\r\n  count(Film, sort = TRUE) %>%\r\n  rename(US_visits_by_film = n)\r\n## # A tibble: 9 x 2\r\n##                   Film US_visits_by_film\r\n##                  <chr>             <int>\r\n## 1           Goldfinger                 3\r\n## 2 Diamonds Are Forever                 2\r\n## 3     Live and Let Die                 2\r\n## 4     A View to a Kill                 1\r\n## 5        Casino Royale                 1\r\n## 6      Licence to Kill                 1\r\n## 7            Moonraker                 1\r\n## 8          Thunderball                 1\r\n## 9  You Only Live Twice                 1\r\nLocating 007 missions\r\nIn order to locate the places in the films where James Bond has been, we need to get their geolocations (latitude and longitude). The geocoding function of the package {ggmap} does the job well with the Google Maps API. We will use the loop described in the blog article of Mitchell Craver.\r\nHowever, we face a problem. There are plenty of imaginary locations in the James Bond movies that Google Maps cannot geolocate. So for each imaginary place, we will just replace it by the name of the country. As this work has to be done manually, we selected only the movies starring the first and last actors playing James Bond: Sean Connery and Daniel Craig.\r\nLet’s begin by locating Bond’s missions in movies starring Sean Connery.\r\n# Identify locations by country, otherwise imprecisions\r\nbond_2 <- tidyr::unite(bond, loc, c(Location, region), sep = \", \", remove = FALSE)\r\n\r\n# Selecting movies starring Sean Connery\r\nconnery <- c(\"Dr. No\", \"From Russia with Love\", \"Goldfinger\", \"Thunderball\", \"You Only Live Twice\", \"Diamonds Are Forever\")\r\nbond_connery <- filter(bond_2, Film %in% connery)\r\n\r\n# Change imaginary locations in country names\r\nbond_connery[18,2] <- \"England\" # \"Shrublands Health Retreat\" in \"Thunderball\"\r\nbond_connery[24,2] <- \"Japan\" # \"SPECTRE's hideout\" in \"You Only Live Twice\"\r\nbond_connery[25,2] <- \"Norway\" # \"Secret CIA base\" in \"You Only Live Twice\"\r\nbond_connery <- bond_connery[-29,] # remove unknown country in Latin America\r\nbond_connery[29,2] <- \"South Africa\" # \"Unnamed location\" in \"Diamonds Are Forever\"\r\nbond_connery[33,2] <- \"Mexico\" # \"Oil rig in Baja California\" in \"Diamonds Are Forever\"\r\n\r\n# Google Maps API\r\n# Loop from Mitchell Craver: http://whatdothedatasay.com/2016/03/16/geocoding-addresses-in-r-with-ggmap/\r\nlibrary(ggmap)\r\n\r\n# ?register_google()\r\n# register_google(key = \"KEY_HERE\")\r\n\r\nfor(i in 1:nrow(bond_connery)){\r\n    result <- ggmap::geocode(bond_connery$loc[i], output = \"latlona\", source = \"google\")\r\n    bond_connery$lon[i] <- as.numeric(result[1])\r\n    bond_connery$lat[i] <- as.numeric(result[2])\r\n    bond_connery$geoAddress[i] <- as.character(result[3])\r\n    Sys.sleep(1) #slow down the requests speed\r\n    }\r\n\r\nwrite_csv(bond_connery, \"output/bond_connery.csv\")\r\nbond_connery <- read.csv(\"output/bond_connery.csv\", header = T) # keep factor\r\n\r\nlevels(bond_connery$Film) <- c(\"Dr. No\", \"From Russia with Love\", \"Goldfinger\", \"Thunderball\", \"You Only Live Twice\", \"Diamonds Are Forever\")\r\n\r\nlibrary(ggiraph)\r\n\r\ng1 <- ggplot() +\r\n  geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region),\r\n           fill = \"lightgrey\", col = \"white\", size = 0.2) +\r\n  geom_point_interactive(data = bond_connery, aes(lon, lat, tooltip = loc), \r\n           color = \"white\", size = 3, fill= \"brown1\", pch = 21) +\r\n  coord_proj(\"+proj=wintri\") +\r\n  theme_map() +\r\n  labs(labs(title = \"James Bond locations in movies starring Sean Connery\",\r\n            caption = \"Félix Luginbühl (@lgnbhl)\\n Data source: Wikipedia\")) +\r\n  theme(plot.title = element_text(size = 14, hjust = 0.5, face = \"bold\"),\r\n               plot.caption = element_text(size = 8, color = \"dimkgrey\"))\r\n\r\nggiraph(print(g1))\r\n\r\n\r\nA nice interactive map!\r\nAnd what about the locations by movie?\r\ng1 + facet_wrap(~ Film)\r\n\r\nLet’s do the same work for the James Bond movies starring Daniel Craig.\r\ncraig <- c(\"Casino Royale\", \"Quantum of Solace\", \"Skyfall\", \"Spectre\")\r\nbond_craig <- filter(bond_2, Film %in% craig)\r\n\r\nbond_craig[3,2] <- \"Madagascar\"\r\nbond_craig[22,2] <- \"Scotland\"\r\n\r\nfor(i in 1:nrow(bond_craig)){\r\n  result <- geocode(bond_craig$loc[i], output = \"latlona\", source = \"google\")\r\n  bond_craig$lon[i] <- as.numeric(result[1])\r\n  bond_craig$lat[i] <- as.numeric(result[2])\r\n  bond_craig$geoAddress[i] <- as.character(result[3])\r\n  }\r\n\r\n# write.csv(bond_craig, \"output/bond_craig.csv\")\r\nbond_craig <- read.csv(\"output/bond_craig.csv\", header = T) # keep factor\r\n\r\nlevels(bond_craig$Film) <- c(\"Casino Royale\", \"Quantum of Solace\", \"Skyfall\", \"Spectre\")\r\n\r\ng2 <- ggplot() +\r\n  geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region),\r\n           fill = \"lightgrey\", col = \"white\", size = 0.2) +\r\n  geom_point_interactive(data = bond_craig, aes(lon, lat, tooltip = loc), \r\n           color = \"white\", size = 3, fill = \"brown1\", pch = 21) +\r\n  coord_proj(\"+proj=wintri\") +\r\n  theme_map() +\r\n  labs(labs(title = \"James Bond locations in movies starring Daniel Craig\",\r\n            caption = \"Félix Luginbühl (@lgnbhl)\\n Data source: Wikipedia\")) +\r\n  theme(plot.title = element_text(size = 14, hjust = 0.5, face = \"bold\"),\r\n        plot.caption = element_text(size = 8, color = \"dimkgrey\"))\r\n\r\nggiraph(print(g2))\r\n\r\n\r\nAnd the locations by movie:\r\ng3 + facet_wrap(~ Film)\r\n\r\nComparing James Bond’s locations in the first and last movies of the franchise, we can see that those starring Sean Connery are mostly in Europe and USA when those starring Daniel Craig are mostly in Latin America and Asia.\r\n\r\nThanks for reading!\r\n\r\nFor updates of recent blog posts, follow me on Twitter.\r\nFor reproducing my data analysis, go on my Github repo or my RStudio server.\r\nCurious about what I can do for your organisation? Have a look my services.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2020-12-02T22:57:10+01:00",
    "input_file": "2017-08-24-bond.utf8.md"
  },
  {
    "path": "posts/2017-07-10-orwell/",
    "title": "Orwell’s 1984, An (Un)Sentimental Analysis",
    "description": "Dystopian books are trendy. After Donald Trump's election, George Orwell novel 1984 hit the No. 1 spot in Amazon’s book sales chart. Also because I love this book, let's make a text analysis using the R package {tidytext}.",
    "author": [],
    "date": "2017-07-10",
    "categories": [],
    "contents": "\r\n\r\nDystopian books are trendy. After Donald Trump’s election, George Orwell novel 1984 hit the No. 1 spot in Amazon’s book sales chart. Also because I love this book, let’s make a text analysis using the R package {tidytext}.\r\n\r\nIn this article, we will answer three questions:\r\nWhat are the words most frequently used?\r\nWhat are the top negative and positive words?\r\nIs a sentiment analysis informative?\r\nThe Data\r\nThe novel 1984 is in the public domain in Canada and Australia (but neither Europe nor the US). We can find a text version of the book from the Projet Gutenberg Australia website here.\r\nFollowing the ebook Text Mining with R from Julia Silge and David Robinson, let’s begin by tidying the text dataset.\r\nlibrary(tidyverse)\r\nlibrary(tidytext)\r\n\r\ntext_1984 <- read_lines(file = \"http://gutenberg.net.au/ebooks01/0100021.txt\", \r\n                        skip_empty_rows = TRUE, \r\n                        skip = 38, # remove metadata\r\n                        n_max = 8500) %>% # remove appendix\r\n  data_frame(text = .) %>%\r\n  write_csv(path = \"input/text_1984.csv\")\r\n\r\nbigBro <- text_1984 %>%\r\n  unnest_tokens(word, text, format = \"text\") %>%\r\n  anti_join(stop_words)\r\nThe Words of Orwell’s 1984\r\nWhat are the 10 most frequent words used in 1984?\r\nlibrary(ggthemes)\r\n\r\nbigBro %>% \r\n  count(word, sort = TRUE) %>% \r\n  filter(n > 100) %>% \r\n  mutate(word = reorder(word, n)) %>%\r\n  ggplot(aes(word, n)) + \r\n  geom_col() + coord_flip() +\r\n  theme_economist_white(gray_bg = F) +\r\n  theme(plot.background = element_rect(fill = \"#f8f2e4\")) +\r\n  labs(x = NULL, y = NULL,\r\n       title = \"10 Most Common Words in Orwell's 1984\",\r\n       caption = \"Félix Luginbühl (@lgnbhl)\\nData source: gutenberg.net.au\")\r\n\r\nThe two main characters “Winston” and “O’Brien” appear. We also get the main topics of Orwell’s totalitarian society with the words “party”, “time”, “war”, “eyes” and “people”.\r\nThe word “time” is the third most common word in 1984. Working at the Ministry of Truth, Winston rewrites the records of the past. His duty is to follow the party’s ever-changing version of history.\r\nWhat about the other frequently used words in the book? A wordcloud can do the job nicely.\r\nlibrary(wordcloud)\r\n\r\nbigBro %>%\r\n  count(word) %>%\r\n  with(wordcloud(word, n, max.words = 150, rot.per=0.35, \r\n                 random.order = FALSE, \r\n                 colors=brewer.pal(8, \"Dark2\")))\r\n\r\nIn the wordcloud, we see the words “brother” (for Big Brother) and “Julia”, Winston’s love interest and other main characters of the novel. Other important words, like “telescreen”, “oceania”, “pain” or “human”, also appear.\r\nTop Negative and Positive Words\r\nIn order to identify positive and negative words, we need to use a sentiment dictionary. The package {tidytext} gives us access to three of them. Let’s apply the Bing sentiment lexicon from Bing Liu and collaborators to our text and visualize the top 10 negative/positive words in 1984.\r\nbigBro %>%\r\n  inner_join(get_sentiments(\"bing\")) %>%\r\n  count(word, sentiment, sort = TRUE) %>%\r\n  group_by(sentiment) %>%\r\n  top_n(10) %>%\r\n  ungroup() %>%\r\n  mutate(word = reorder(word, n)) %>%\r\n  ggplot(aes(word, n, fill = sentiment)) +\r\n  geom_col(show.legend = FALSE) +\r\n  facet_wrap(~sentiment, scales = \"free_y\") +\r\n  coord_flip() +\r\n  theme_economist_white() +\r\n  theme(plot.background = element_rect(fill = \"#f8f2e4\")) +\r\n  labs(x = NULL, y = NULL,\r\n       title = \"Top 10 Positive and Negative Words in 1984\",\r\n       caption = \"Félix Luginbühl (@lgnbhl)\\nData source: gutenberg.net.au\")\r\n\r\nAlthough the word “love” appears 51 times, it is rarely linked with a positive sentiment. Indeed, the “Ministry of Love” is in charge of torturing political prisoners. We touch here the limits of the use of a sentiment lexicon.\r\nA Sentiment Analysis by Chapter\r\nSentiment words used in 1984 are mostly describing Winston’s emotions. So it makes sense to try a sentiment analysis. Let’s take the Text Mining with R’s sentiment analysis approach, defining a sentiment score for each chapter i of the book:\r\nscorei = positivei - negativei\r\nwhere positivei is the number of “positive” words in a chapter, and negativei the number of “negative” words in a chapter. For instance, if we have 100 positive words and 60 negative words in chapter 1, we get a score of 40.\r\nFirst, we need to add a chapter variable in our dataset.\r\nbigBro_2 <- read_csv(\"input/text_1984.csv\") %>%\r\n  mutate(chapter = cumsum(str_detect(text, regex(\"^chapter [\\\\digit]\", \r\n                                                 ignore_case = TRUE)))) %>%\r\n  unnest_tokens(word, text, format = \"text\")\r\nNow, let’s prepare our dataset for the sentiment analysis.\r\nlibrary(tidyr)\r\n\r\nbigBro_sent <- bigBro_2 %>%\r\n  inner_join(get_sentiments(\"bing\")) %>%\r\n  anti_join(stop_words) %>%\r\n  count(chapter, sentiment) %>%\r\n  spread(key = sentiment, value = n) %>%\r\n  mutate(sentiment = positive - negative)\r\n  \r\nprint(bigBro_sent)\r\n## Source: local data frame [23 x 4]\r\n## Groups: chapter [23]\r\n## \r\n## # A tibble: 23 x 4\r\n##    chapter negative positive sentiment\r\n##      <int>    <int>    <int>     <int>\r\n##  1       1      261       94      -167\r\n##  2       2      118       40       -78\r\n##  3       3       93       52       -41\r\n##  4       4       80       48       -32\r\n##  5       5      189       88      -101\r\n##  6       6       80       30       -50\r\n##  7       7      173       55      -118\r\n##  8       8      264      108      -156\r\n##  9       9      125       46       -79\r\n## 10      10      105       68       -37\r\n## # ... with 13 more rows\r\nWe are ready to run our final visualisation.\r\nlibrary(scales)\r\n\r\nggplot(bigBro_sent, aes(chapter, sentiment)) +\r\n  geom_col() +\r\n  scale_x_continuous(breaks = c(1:23)) +\r\n  geom_smooth(method = \"loess\", se = FALSE) +\r\n  theme_economist_white() +\r\n  theme(plot.background = element_rect(fill = \"#f8f2e4\"),\r\n        plot.caption = element_text(color = \"dimgrey\")) +\r\n  labs(title = \"Orwell's 1984: A Sentiment Analysis\",\r\n       caption = \"Félix Luginbühl (@lgnbhl)\\nData source: gutenberg.net.au\")\r\n\r\nWe see that the sentiment score of each chapter is negative. Our sentiment analysis reflects plainly the dark and pessimistic tone of the novel.\r\nLet’s look at chapters 1, 8 and 17, which are the first chapters of the three parts dividing 1984. We notice that these first chapters get the worst score.\r\nOur sentiment analysis also shows that the sentiment score of each chapter is generally improving until chapter 17. Those who read the novel know what happens to Winston in this final part of the book.\r\n\r\nThanks for reading!\r\n\r\nFor updates of recent blog posts, follow me on Twitter.\r\nFor reproducing my data analysis, go on my Github repo or my RStudio server.\r\nCurious about what I can do for your organisation? Have a look my services.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2020-12-02T22:49:26+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2017-06-09-marvel/",
    "title": "Marvel vs DC Comics",
    "description": "Les adaptations de superhéros brillent aux Box Office. Les films Marvel's The Avengers et Avengers: Age of Ultron sont ainsi les 5ème et 7ème plus gros succès au Box Office international. L'envie m'a prise de comparer les succès commerciaux des deux sociétés qui se partagent un quasi monopole des superhéros: Marvel Studios et DC Entertainment.",
    "author": [],
    "date": "2017-07-10",
    "categories": [],
    "contents": "\r\n\r\nLes adaptations de superhéros brillent aux Box Office. Les films Marvel’s The Avengers et Avengers: Age of Ultron sont ainsi les 5ème et 7ème plus gros succès au Box Office international. L’envie m’a prise de comparer les succès commerciaux des deux sociétés qui se partagent un quasi monopole des superhéros: Marvel Studios et DC Entertainment.\r\n\r\nDans cet article, nous répondrons à trois questions:\r\nQuelle franchise a le plus d’adaptations au cinéma?\r\nQuelle franchise a engendré les films les plus rentables?\r\nComment se répartissent les adaptations des franchises depuis 40 ans?\r\nLes données\r\nLe site Box Office Mojo (filiale du site IMDb, lui-même propriété d´Amazon) propose deux tableaux des recettes des adaptations cinématographiques des franchises DC Comics (ici) et de Marvel Comics (là).\r\nCes données nous intéressent car Box Office Mojo calcule aussi les recettes en ajustant le prix du billet à l’inflation. Sans cet ajustement à l’inflation, il ne serait pas pertinent de comparer les revenus commerciaux des films des années 1980 à ceux des années 2010. Malheureusement, les données ajustées n’existent que pour le Box Office américain. Nous nous en contenterons.\r\nUn simple copier-coller dans LibreOffice Calc permet de sauvegarder rapidement le tableau “Adjusted for Ticket Price Inflation” au format CSV. D’autres bloggeurs se sont amusés à importer les données directement depuis la console R (ici) ou à partir d’un article de Wikipédia qui reprend les données du site Box Office Mojo (là).\r\nNombre de films adaptés par franchise\r\nAvec le package {waffle}, comparons le nombre de films adaptés par franchise.\r\nlibrary(tidyverse)\r\nlibrary(waffle)\r\n\r\ndc_comics <- read_csv(\"input/dc_comics.csv\") %>%\r\n  mutate(Franchise = \"DC Comics\")\r\n\r\nmarvel <- read_csv(\"input/marvel.csv\") %>%\r\n  mutate(Franchise = \"Marvel\")\r\n\r\nnb_films <- c(\"Marvel Comics (45)\" = nrow(marvel), \"DC Comics (29)\" = nrow(dc_comics))\r\n\r\nwaffle(nb_films, row = 5, legend_pos = \"bottom\",\r\n       title = \"Nombre d'adaptations par franchise\",\r\n       colors = c(\"red3\", \"blue3\"))\r\n\r\nLe nombre d´adaptations de la franchise Marvel (45 films) est 1.5 fois supérieur à celle de DC Comics (29 films).\r\nRevenu total et médian par franchise\r\nVoyons maintenant les recettes totales par franchise. Commençons par joindre les deux bases de données et faire un peu de nettoyage.\r\nlibrary(lubridate)\r\n\r\ndf <- full_join(dc_comics, marvel) %>%\r\n  mutate(Release = lubridate::mdy(Release)) %>%\r\n  rename(\"Title\" = \"Title (click to view)\",\r\n         \"AdjGross\" = \"Adjusted Gross\",\r\n         \"UnadjGross\" = \"Unadjusted Gross\") %>%\r\n  mutate(AdjGross = str_remove_all(AdjGross, \"[\\\\$|\\\\,]\"), #enlever $ and ,\r\n         UnadjGross = str_remove_all(UnadjGross, \"[\\\\$|\\\\,]\"),\r\n         AdjGross = as.numeric(AdjGross)/1000000, # en millions de dollars\r\n         UnadjGross = as.numeric(UnadjGross)/1000000) %>%\r\n  select(-Rank)\r\n\r\nprint(df)\r\n## # A tibble: 74 x 6\r\n##    Title                   Studio AdjGross UnadjGross Release    Franchise\r\n##    <chr>                   <chr>     <dbl>      <dbl> <date>     <chr>    \r\n##  1 The Dark Knight         WB         657.       533. 2008-07-18 DC Comics\r\n##  2 Batman                  WB         557.       251. 1989-06-23 DC Comics\r\n##  3 The Dark Knight Rises   WB         509.       448. 2012-07-20 DC Comics\r\n##  4 Superman                WB         507.       134. 1978-12-15 DC Comics\r\n##  5 Batman Forever          WB         374.       184. 1995-06-16 DC Comics\r\n##  6 Batman Returns          WB         347.       163. 1992-06-19 DC Comics\r\n##  7 Superman II             WB         344.       108. 1981-06-19 DC Comics\r\n##  8 Batman v Superman: Daw… WB         338.       330. 2016-03-25 DC Comics\r\n##  9 Suicide Squad           WB         338.       325. 2016-08-05 DC Comics\r\n## 10 Man of Steel            WB         307.       291. 2013-06-14 DC Comics\r\n## # ... with 64 more rows\r\nA présent, calculons les recettes totales et médianes par franchise\r\nlibrary(knitr)\r\n\r\ndf %>%\r\n  group_by(Franchise) %>%\r\n  summarise(sumGross = round(sum(AdjGross), 2)) %>%\r\n  knitr::kable()\r\nFranchise\r\nsumGross\r\nDC Comics\r\n6400.78\r\nMarvel\r\n11155.90\r\ndf %>%\r\n  group_by(Franchise) %>%\r\n  summarise(medianGross = round(median(AdjGross), 2)) %>%\r\n  knitr::kable()\r\nFranchise\r\nmedianGross\r\nDC Comics\r\n175.75\r\nMarvel\r\n215.37\r\nLe revenu total du Box Office américain des adaptations de Marvel (11.15 milliards de dollars) est supérieur à celui de DC Comics (6.4 milliards). Il en est de même pour ses recettes médianes (215.3 millions contre 175.7 millions de dollars).\r\nTop 10 des films les plus rentables\r\nCréons un tableau des dix adaptations de superhéros de bande dessinées les plus rentables aux États-Unis.\r\ndf %>%\r\n  select(Title, AdjGross, Franchise, Release) %>%\r\n  arrange(desc(AdjGross)) %>%\r\n  head(n = 10L) %>%\r\n  knitr::kable()\r\nTitle\r\nAdjGross\r\nFranchise\r\nRelease\r\nMarvel’s The Avengers\r\n679.6299\r\nMarvel\r\n2012-05-04\r\nThe Dark Knight\r\n656.5381\r\nDC Comics\r\n2008-07-18\r\nSpider-Man\r\n614.2452\r\nMarvel\r\n2002-05-03\r\nBatman\r\n556.5188\r\nDC Comics\r\n1989-06-23\r\nSpider-Man 2\r\n531.8033\r\nMarvel\r\n2004-06-30\r\nThe Dark Knight Rises\r\n509.0232\r\nDC Comics\r\n2012-07-20\r\nSuperman\r\n507.0458\r\nDC Comics\r\n1978-12-15\r\nAvengers: Age of Ultron\r\n473.1779\r\nMarvel\r\n2015-05-01\r\nSpider-Man 3\r\n432.4023\r\nMarvel\r\n2007-05-04\r\nIron Man 3\r\n431.4658\r\nMarvel\r\n2013-05-03\r\nSix des dix films les plus rentables proviennent de la franchise Marvel. L’ajustement du prix du ticket à l’inflation révèle que les films Batman (1989) et Superman (1978) ont généré plus de recettes que Avengers: Age of Ultron (2015) sur le marché américain.\r\nVisualisation de l’ensemble des adaptations\r\nMais qu’en est-il des autres films? Et qu’en est-il de la répartition des films au cours des années? Une simple fonction nous aidera a visualiser la prise en compte ou l’absence de l’ajustement des recettes à l’inflation.\r\nlibrary(scales)\r\n\r\nplot <- function(data, gross){\r\n  data %>%\r\n    ggplot(aes(x = Release, y = gross)) +\r\n    geom_label(aes(label = Title, color = Franchise), \r\n               size = 2.5, alpha = 0.6) +\r\n    scale_x_date(breaks = date_breaks(\"5 years\"),\r\n                 labels = date_format(\"%Y\")) +\r\n    scale_y_continuous(labels = dollar) +\r\n    scale_color_manual(values = c(\"blue3\", \"red3\")) +\r\n    theme_bw() +\r\n    theme(plot.title = element_text(face = \"bold\"),\r\n          legend.position = \"none\") +\r\n    labs(x = \"\", y = \"millions de dollars\",\r\n         caption = \"@lgnbhl | Source: boxofficemojo.com\" )\r\n  }\r\n\r\nplot(data = df, gross = df$AdjGross) +\r\n  labs(title = \"Marvel vs. DC Comics\",\r\n       subtitle = \"Box Office américain (revenu ajusté à l'inflation)\")\r\n\r\nLa franchise Marvel semble avoir pris le dessus sur DC Comics depuis les années 2000. Le revenu ajusté à l’inflation révèle combien les sagas Superman et Batman ont été rentables durant les années 1980-90. C’est une surprise.\r\nFinalement, voyons comment l’absence d’ajustement du prix du ticket à l’inflation fausse l’interprétation des données.\r\nplot(df, df$UnadjGross) +\r\n  labs(title = \"Marvel vs. DC Comics\",\r\n       subtitle = \"Box Office américain (revenu non-ajusté à l'inflation)\")\r\ncenterLa visualisation est fortement modifiée. Le succès commercial des sagas Superman et Batman de DC Comics des années 1980-90 est masquée.\r\nIl suffit de modifier légèrement le script pour comparer d’autres franchises comme Star Wars et Star Treck ou James Bond et Jason Bourne.\r\nCliquez sur l’image pour l’agrandir.\r\n \r\nVisualisation interactive\r\nTableau public permet de créer des visualisations interactives. Je me suis amusé à l’utiliser avec les données créées dans cet article (en anglais).\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <script type='text/javascript'>                    var divElement = document.getElementById('viz1522829883428');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script><\/p>\r\nConclusion\r\nNotre analyse a montré que la franchise Marvel fait mieux que sa rivale DC Comics au Box Office américain à tous les niveaux: ses recettes individuelles, totales et médianes sont plus élevées, tout comme son nombre d’adaptations.\r\nMais dans le 7ème art, comme ailleurs, popularité ne rime pas toujours avec qualité.\r\nRéférences\r\nD’autres bloggeurs ont étudié la base de donnée de Box Office Mojo:\r\nJoshua Kunst (2016, mars). Visualizing Movies Gross Income.\r\nChristoph Safferling (2015, 14 novembre). James Bond movies.\r\n\r\nThanks for reading!\r\n\r\nFor updates of recent blog posts, follow me on Twitter.\r\nFor reproducing my data analysis, go on my Github repo or my RStudio server.\r\nCurious about what I can do for your organisation? Have a look my services.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2020-12-02T22:53:29+01:00",
    "input_file": "2017-06-09-marvel.utf8.md"
  }
]
